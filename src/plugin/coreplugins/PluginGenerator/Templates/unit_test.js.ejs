/**
* Generated by PluginGenerator from webgme on <%= date %>.
*/

'use strict';
var testFixture = require('../../../globals');

describe('<%= pluginID %>', function () {
    var gmeConfig = testFixture.getGmeConfig(),
        runPlugin = testFixture.runPlugin,
        openContext = testFixture.WebGME.openContext,
        expect = testFixture.expect,
        pluginName = '<%= pluginID %>';

    it('should run using local-storage with default config', function (done) {
        var managerConfig = {
                pluginName: pluginName,
                projectName: 'testProject',
                branchName: 'master',
                activeNode: '/1',
            },
            pluginConfig = {},
            options = {
                localStorage: true,
                importProject: './test/assets/sm_basic.json'
            };
        runPlugin(gmeConfig, managerConfig, pluginConfig, options, function (err, result/*, storage*/) {
            expect(err).to.equal(null);

            expect(result.success).to.equal(true);
            done();
        });
    });

    it('should run using serveruser-storage with default config', function (done) {
        var managerConfig = {
                pluginName: pluginName,
                projectName: 'testProject',
                branchName: 'master',
                activeNode: '/1',
            },
            pluginConfig = {},
            options = {
                localStorage: false, // This requires that the database is connected
                overwrite: true,
                importProject: './test/assets/sm_basic.json'
            };
        runPlugin(gmeConfig, managerConfig, pluginConfig, options, function (err, result/*, storage*/) {
            expect(err).to.equal(null);

            expect(result.success).to.equal(true);
            done();
        });
    });
});